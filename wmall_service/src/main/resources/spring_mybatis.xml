<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">
   <!--自动扫描-->
   <context:annotation-config />
   <aop:aspectj-autoproxy proxy-target-class="true" expose-proxy="true"/>
   <context:component-scan base-package="com.wmall" use-default-filters="false">
       <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
       <context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
       <context:include-filter type="annotation" expression="org.springframework.stereotype.Component"/>
   </context:component-scan>
    <!--引入文件-->
   <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
          <property name="location" value="classpath:config.properties" />
   </bean>
   <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
       <property name="driverClass" value="${c3p0.driverClass}"/>
       <property name="jdbcUrl" value="${c3p0.jdbcUrl}"/>
       <property name="user" value="${c3p0.user}"/>
       <property name="password" value="${c3p0.password}"/>
       <property name="acquireIncrement" value="${c3p0.acquireIncrement}"/><!--当连接池中的连接用完时，C3P0一次性创建新连接的数目-->
       <property name="minPoolSize" value="${c3p0.minPoolSize}"/><!--连接池中保留的最小连接数-->
       <property name="maxPoolSize" value="${c3p0.maxPoolSize}"/><!--连接池中保留的最大连接数-->
       <property name="initialPoolSize" value="${c3p0.initialPoolSize}"/><!--初始化时创建的连接数，应在minPoolSize与maxPoolSize之间取值-->
       <property name="maxIdleTime" value="${c3p0.maxIdleTime}"/><!--最大空闲时间，超过空闲时间的不在使用的连接将被丢弃。0表示永不丢弃-->
       <property name="idleConnectionTestPeriod" value="${c3p0.idleConnectionTestPeriod}"/><!--隔多少秒检查所有连接池中的空闲连接-->
       <property name="acquireRetryAttempts" value="${c3p0.acquireRetryAttempts}"/><!--定义在从数据库获取新连接失败后重复尝试获取的次数-->

   </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
         <property name="dataSource" ref="dataSource" />
         <!-- 自动扫描mapping.xml文件 -->
         <property name="mapperLocations" value="classpath:mybatis/*.xml"/>
         <property name="plugins">
            <!-- 分页拦截器 -->
            <bean class="com.wmall.pageplug.PageInterceptor"></bean>
         </property>
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
     </bean>
     <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
         <property name="basePackage" value="com.wmall.mapper" />
         <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>
    <bean id="log4jdbcInterceptor" class="net.sf.log4jdbc.DataSourceSpyInterceptor"/>
    <bean id="dataSourceLog4jdbcAutoProxyCreator"
          class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
        <property name="interceptorNames">
            <list>
                <value>log4jdbcInterceptor</value>
            </list>
        </property>
        <property name="beanNames">
            <list>
                <value>dataSource</value>
            </list>
        </property>
    </bean>
     <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager"
         class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
         <property name="dataSource" ref="dataSource" />
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager"/>
</beans>